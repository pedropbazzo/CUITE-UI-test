<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO+vPxDipDaH4aQ20eKkNujipDbc4qU3tOCkNnbiojgkAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADvrz8Q4aQ22OKlN//hpTe34KM1Q9+fNyDiqDks46Y3XOGl
        N6XhpDa14aU4Tf//AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOKkNofipTf/4aU3waqqVQMAAAAAAAAAAAAA
        AAAAAAAAAAAAAN+fLxDgpDd34aQ2teGjNj0AAAAAAAAAAH9/AAL//wABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4qQ31OKlN//ipjZZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOapPBXhpTdy4aU29+GkNtvipTby4qU3/+GlN/3hpDfr4aU3x+Gk
        NpLjpjZL1KoqBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADipTfx4qU3/9+l
        NTkAAAAAAAAAAAAAAAAAAAAAAAAAAOCjNirhpDem4qU3+uKlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTbp4qQ2f9qjNg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOKk
        N+vipTf/5Kc5QwAAAAAAAAAAAAAAANqRJAfhpTeL4aQ2++KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU359+kN1IAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4qU3y+KlN//ipjhtAAAAAAAAAADdpjcX4aQ2yeKlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+OlN4t/fwACAAAAAAAA
        AAAAAAAAAAAAAAAAAADipDaW4qU3/+GkN68AAAAA3KI5FuKkNtfipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Gj
        NpoAAAAAAAAAAAAAAAAAAAAAAAAAAOGmN07ipTf/4aQ29uShNRPipDbD4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlNnUAAAAAAAAAAAAAAAAAAAAA2rZIB+KkNu7ipTf/4qU30OKlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4qU3/+KlNuDhpTdy4ac2PeGmN0XhpTeL4aU39OKlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4aU3+uKkOC0AAAAAAAAAAAAAAAAAAAAA4KQ3j+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//hpTfB2qM2DgAAAAAAAAAAAAAAAAAAAADmpzcp4aQ26OKl
        N//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3uQAAAAAAAAAAAAAAAAAAAADnpzcH4qU3A+Kl
        NwLipTcFEQwEGg0JAxHipTcB4qU3BeKlNwPipTcF4qU2AgAAAAAAAAAYAAAAEAAAAAAAAAAAAAAAAAAA
        AADhpDYC4qU3B+KlNwHipTcB4qU3AeKlNwLipTcC4qU3AeKlNwHipTcB4qQ4AQAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAlwAAANMAAACPAAAAbAAAAIMAAAAwAAAAAAAAAAAAAAA0AAAA5wAAAL8AAAB0AAAAfAAA
        ACgAAAAAAAAAGAAAAIcAAAD/AAAAwwAAADAAAAAAAAAACAAAAEwAAAD/AAAA/wAAAEwAAAAIAAAAAAAA
        AAAAAAAAAAAAAAAAAKsAAAD/AAAATOKlNwHipTcBAAAAAAAAAGAAAAAAAAAAAAAAAMsAAAD/AAAABAAA
        AAAAAAAAAAAAiwAAAAAAAAAAAAAAQAAAAP8AAACfAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAkAAAA/wEAANPipTcC4qU3AeKlNwHipTcDAAAAAOKlNwHipTcBAQEA9wMC
        APPhpDYE4aQ2AuGkNgEBAQB94aQ2AuGkNgIKBwJCAgEA/wEBAJ8AAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAA4aU2AQAAAAAAAAAAAAAAAAAAAGgAAAD/AAAAswAAAAAAAAAAAAAAAOKlNwHipTcBAAAAAAAA
        AAAAAAD/AAAA3+KlNwXipTcH4qU3AQEBAIDipTcB4qU3AQAAAEAAAAD/AQEAn+KlNwHipTcBAAAAAAAA
        AAAAAAD/AAAA/wAAAADipTcCAAAAAAAAAAAAAAAAAgIATQAAAP8AAACzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4qU3BwYEAf8FAwHg4qU3AwAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAQAAAAP8BAQCf4qU3AeKl
        NwEAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAA9wAAAOsAAAAAAAAAAOKl
        NwEAAAAAAAAAQAAAAAAAAAAAAAAA/wAAAN8AAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAABAAAAA/wAA
        AJ8AAAAAAAAAGAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAAAABUAAAA+wAA
        AGAAAAAA4KQ2AbyJLRgbFAbb4qU3GeKlNwgCAQD/AAAA7+GlNAHhpTQB4aU0AQEBAIAAAAAQAAAAAAAA
        AEAAAAD/AAAAn+KlNwEBAQCXAAAAEAAAAAAAAAD/AAAA/wAAAAAAAAAEAAAAgwAAAAAAAAAAAAAAAAAA
        AAAAAABUAAAAwwAAAKsAAACDAAAAnwAAALcAAAAAAAAAcAAAAP8AAAD/AAAAaAAAAAAAAAA8AAAAxwAA
        AIcAAAAkAAAAnwAAAP8AAADPAAAAQAAAAJ8AAADXAAAAjwAAAP8AAAD/AAAAjwAAAMMAAACfAAAAAAAA
        AAAAAAAA4aQ1B+KlNwTipTcHQjAQEQAAAATiqTgCcFIbEOKlNw7ipTcO4qU3E+KmOAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADhozUB4qU3A+KlNwPipTcE4qU3BOKlNwfipTcE4qU3BeKlNwXhpTcDAAAAAAAA
        AAAAAAAAAAAAAAAAAADiqTgJ4aU25OKlN//hpTf+46Q3dwAAAADgozYq4aQ36+KlN//ipTf/4qQ38OGl
        OE0AAAAAAAAAAAAAAAD/vz8E4qQ3fOGkN/7ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Gk
        NpsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhpjhW4qU3/+KlN//ipTf/4aU3nN+fPwjfpjQx4aU27eKl
        N//ipTf/4qU3/+GlN9Djpjab4aQ2o+GkNuTipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipDfr5605FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhpDab4qU3/+KlN//ipTf/4qQ20eGl
        NzPkpDUw4aQ26uKlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4aQ2/OOlN0oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ZMwXipTew4qU3/+Kl
        N//ipTf/4aQ2/OOlN5zjpTdK4qQ23+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+GlN/3ipThkAAAAAAAAAAAAAAAA4ac6IwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+/
        PwTipDaW4qU3/+KlN//ipTf/4qU3/+GlN/3ipDfU4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//hpDbz46U3UwAAAAAAAAAAAAAAAAAAAADipTaIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADiozVR4aQ34uKlN//ipTf/4qU3/+KlN//ipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//ipTf/4KQ2u+KiOCQAAAAAAAAAAAAAAAAAAAAAAAAAAOGlN5QAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADiqTgJ4qQ2a+KkN9TipTf/4qU3/+KlN//ipTf/4qU3/+Kl
        N//ipTf/4qU3/+KlN//hpDb74qU3tOGlOEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4aU2rQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOCjNiripTdq4aU2muGl
        N7fipTfF4qU3wuGlN8ripTf/4qU3/+KlN+fhpDVo2pEkBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOGl
        NCLhpDbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOOkN1LhpDbb4qU3/+KlN//ipDfn4qU3huGlNzP/fwACAAAAAAAA
        AADfoTcp4aU3z+OlN3gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyZMwXhpDdg4aU20uKlN//ipTf/4qU3/+Gk
        NvPipDbW4qU23+KlN/7hpTbS1KoqDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4aY1NOKk
        N4XipDfC4aQ26OKlN/HhpDbX4qU2iN2qMw8AAAAAAAAAAIB///8AD///D4Z//x/AA/8fAAD/HAAAfxgA
        AB8QAAAfAAAADwAAAAeAA8AHgAngA8BgQQPBY2PPgIADy45gAMuPw2DPjWdizcQAIEngQgABwAfgB8ED
        gAfgAAAH8AAAD/AAAB34AAA9/gAAff8AAf3/4AH5///AMf//4AH///wDKAAAABAAAAAgAAAAAQAgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOm/FQzuuh2K7rodme+7HXLwuxw1AAAAAOm/FQzsuR1G7LweY+26
        H1rtvR0rAAAAAAAAAAAAAAAAAAAAAAAAAADtuh6G7rseqf+qAAP//wAB7bocR+67Hcfuux707rse/+67
        Hv/uux7/7rse/+26HtHtuhxHAAAAAAAAAAAAAAAA7bods+27HmYAAAAA67odGu66HdXuux7/7rse/+67
        Hv/uux7/7rse/+67Hv/uux7/7boe/u67HXkAAAAAAAAAAO26HaTuux2L/8wzBe67Hsvuux7/7rse/+67
        Hv/uuh337rodxe67Hc3tux797rse/+67Hv/uux7/7bocWQAAAADtuh507bod3e66Hmzuux7/7rse/+67
        Hv/tuh2/87whFwAAAAAAAAAA7r0gL+26HeDuux7/7rse/+66HejlshkK6bYdBO67HgHuuh4BLyUGBQ4L
        ARHtux4BAAAAAAAAABQAAAAAAAAAAAAAAADvvx8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAA
        AIsAAAAwAAAAIAAAAFQAAACHAAAASAAAABQAAADHAAAANAAAAAwAAADnAAAAFAAAAAAAAAAAAAAAAAAA
        AKsAAAA8AAAAAAAAAAAAAACbAAAARAAAACAAAAAgAAAAvwAAACAAAAAAAAAA3wAAAAAAAAAAAAAAAAAA
        AAAAAAB0AAAATAAAAAAAAAAgAAAAnwAAAEQAAAAgAAAAIAAAAL8AAAAgAAAAFAAAAN8AAAAEAAAADAAA
        AAAAAAAAAAAAAAAAAEgAAAA4AAAAMAAAAFwAAAA8AAAAJAAAACwAAABoAAAAJAAAAFgAAAB0AAAATAAA
        ABAAAAAAAAAAAO25HALtuh4B7bsdB+67HgTuuh0BAAAAAAAAAAAAAAAAAAAAAO26HgHuux4BAAAAAAAA
        AAAAAAAAAAAAAAAAAADovCEX7rsd5u67HZvuux3w7rse/+27Hbzvux517bodgu26Hd3uux7/7rse/+67
        Hv/tuh2+/rkXCwAAAAAAAAAAAAAAAPC7HkTtuh337boe8+67Hv/uux7/7rse/+67Hv/uux7/7rse/+67
        Hv/tuh29778fEO29H0oAAAAAAAAAAAAAAAAAAAAA7LkbN+67Hdbuux7/7rse/+67Hv/uux7/7rse/+66
        HvvvvB2R378fCP//AAHtuh5kAAAAAAAAAAAAAAAAAAAAAAAAAAD/qgAD7rseTO26HZHtuh2u7bsd1u67
        Hv/uuh3G7LkcUe64Gy/uux2L77wfQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        AAHtux8577odg+26Hq/uux6n7LseUwAAAAAEH6xBAAesQSADrEEAAaxBAMCsQQLvrEHAAaxBzAusQcgA
        rEHgAKxBweesQcAArEHgAKxB8ACsQfgArEH/gaxB
</value>
  </data>
</root>